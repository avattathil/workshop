<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Taskcat Workshop on taskcat workshop</title><link>/</link><description>Recent content in Taskcat Workshop on taskcat workshop</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Lab Enviornment</title><link>/00_pre/00_page1.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/00_pre/00_page1.html</guid><description> Lab information The AWS Appstream seesion that you are using for this hands on lab has the follow programs pre-installed:
Python3 (taskcat is Python program) taskcat (pip install taskcat) Docker (Used for lambda packaging) Vscode (With taskcat schemea validation enabled)</description></item><item><title>Getting Started</title><link>/00_pre/00_page2.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/00_pre/00_page2.html</guid><description> Getting Started</description></item><item><title>Add a (Project Level) config</title><link>/10_lab1/10_page2.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/10_lab1/10_page2.html</guid><description> Project Config Ths config file provides project specific configuration.
The project config file is located in the root of your project folder &amp;lt;PROJECT_ROOT&amp;gt;/.taskcat.yml
From the vscode file browser navigate to the lab1/,
Open that taskcat.yml
Double click on the file to open them in the ide tabs
@TODO Screen shoot need updated to show appstream</description></item><item><title>- Define project section</title><link>/10_lab1/10_page3.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/10_lab1/10_page3.html</guid><description> Add a project section for the value of name: specify the name of the project folder
project: name: cfn-project</description></item><item><title>- Defining tests</title><link>/10_lab1/10_page4.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/10_lab1/10_page4.html</guid><description> Adding test definitions Define a test called mytest and define the template location
Specfiy path to your relative to you project root template: templates/lab1.template.yaml
Optionally you you can set the project_root to a diffrent location if need be:
-p PROJECT_ROOT or --project-root PROJECT_ROOT
tests: mytest: template: templates/lab1.template.yaml</description></item><item><title>- Define regions</title><link>/10_lab1/10_page5.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/10_lab1/10_page5.html</guid><description> Add regions to your test The region: key is optional for tests by default region inherit from the global configuration (We will conver global configs later in this lab) The region parameter takes a list of regions. When defined in a test, taskcat will limit test to those regions
For now only specifiy one region us-east-1
tests: mytest: template: templates/lab1.template.yaml regions: - us-east-1</description></item><item><title>- Define parameters</title><link>/10_lab1/10_page6.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/10_lab1/10_page6.html</guid><description>Add a parameter section to the test add the parameters: set the value of S3BucketName to $[taskcat_autobucket] This will evaulate to the bucket that taskcat creates during execution Hint: Parameter vaules can be dynamically passed to a stack during creation when testing with taskcat. For example: By specifing $[taskcat_autobucket] as the value of S3BucketName we can instruct taskcat to replace value with the name of the bucket that will be created at runtime</description></item><item><title>Execute a taskcat test</title><link>/10_lab1/10_page7.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/10_lab1/10_page7.html</guid><description> Start a test From you vsode terminal change directory to you project root for lab1 (lab_assets/start/lab1/cfn-project)
Under cfn-project you will see the following files
cfn-project ├── lambda_functions ├── templates └── .taskcat.yml From the cfn-project dir run you taskcat testa
taskcat test run Expected output:</description></item><item><title>View test results</title><link>/10_lab1/10_page8.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/10_lab1/10_page8.html</guid><description>Test Results After the test completes you will see a new folder under cfn-project called taskcat_outputs
cfn-project ├── lambda_functions ├── templates ├── .taskcat.yml └── taskcat_outputs/index.html &amp;lt; - (report) open taskcat_outputs/index.html in the your web browser To see the test logs click the View Logs link</description></item><item><title>Create Psuedo Parameters</title><link>/20_lab2/20_page1.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/20_lab2/20_page1.html</guid><description>Add Psuedo-Parameters to your project-level taskcat config Edit your cfn_project/.taskcat.yml parameters to include psuedo-parameters. Please see the Taskcat Concepts section for more details on psuedo-parameters
Note: Parameter values we want to override from the global config must still be defined within the project config. In our example, below, you see a placeholder value. This can be any string and has no other consequence.
Example project config file:</description></item><item><title>Execute a taskcat test</title><link>/20_lab2/20_page2.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/20_lab2/20_page2.html</guid><description> Start a test From you vsode terminal change directory to your project root for lab2 (lab2/cfn-project)
Under cfn-project you will see the following files
cfn-project ├── lambda_functions ├── templates └── .taskcat.yml From the cfn-project dir run you taskcat testa
taskcat test run Expected output:</description></item><item><title>Check Template Outputs</title><link>/20_lab2/20_page3.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/20_lab2/20_page3.html</guid><description>Test Results After the test completes you will see a new folder under cfn-project called taskcat_outputs
cfn-project ├── lambda_functions ├── templates ├── .taskcat.yml └── taskcat_outputs/index.html &amp;lt; - (report) open taskcat_outputs/index.html in the your web browser To see the test logs click the View Logs link
@TODO: MORE SCREENSHOTS OF TEMPLATE OUTPUTS</description></item><item><title>Deploy CI/CD pipeline</title><link>/50_lab5/10_page.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/50_lab5/10_page.html</guid><description>To setup a CICD pipeline for your project, you need the following details. Make a note of the following before proceeding with the rest of the steps: -
Your AWS Code Commit repository name Your AWS Code Commit repository Url (https://) Source branch name, where you will be pushing your changes Release branch name, where your changes needs to be promoted, after successfull test Launch stack To create a CICD pipeline, you will use a CloudFormation template.</description></item><item><title>View test and code promotion</title><link>/50_lab5/20_page.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/50_lab5/20_page.html</guid><description>Now, after your stack creation is completed successfully and you have a CICD pipeline setup, let&amp;rsquo;s see what does the pipeline do.
View CICD pipeline On your Cloudformation console, click the Outputs tab.
Look for CodePipelineURL, and open the link in a new tab in your browser.
This will open the AWS Code Pipeline console, and you should see a pipeline.
You may see that, either the Source action or the Build action is in-progress.</description></item></channel></rss>